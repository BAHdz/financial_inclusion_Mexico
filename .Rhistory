require(easypackages)
libraries("stringr", "dplyr", "readxl",
"writexl", "janitor", "textclean")
inc_fin2019_4 <- read_xlsx("inc_fin2019.xlsx",
sheet = 1,
.name_repair = make_clean_names #Clean most of spaces, dots and uppercases of column names
)
glimpse(inc_fin2019_4)
inc_fin2019_4 <- inc_fin2019_4 %>%
mutate(across(where(is.numeric) & contains("poblacion"),
round)) #Round all quantities from population
head(inc_fin2019_4[, 6:10]) #colummns that contain data about population
sharedcols <- inc_fin2019_4[,1:10] #Separate columns with shareable data about names, states and population
dim(sharedcols)
glimpse(sharedcols)
no_scols <- inc_fin2019_4[, -(1:10)] #The rest of data
dim(no_scols)
glimpse(no_scols)
no_scols <- no_scols %>%
rename_all(paste0, "_19_4") #Add suffix to label data from 4th quarter 2019
glimpse(no_scols) #All labeled columns must appear with suffix "2019_4
inc_fin2019_4_lp <- cbind(sharedcols, no_scols)
inc_fin2019_3 <- read_xlsx("inc_fin2019.xlsx",
sheet = 2,
.name_repair = make_clean_names
)
inc_fin2019_3 <- inc_fin2019_3 %>%
mutate(across(where(is.numeric) & contains("poblacion"),
round))
sharedcols <- inc_fin2019_3[,1:10]
no_scols <- inc_fin2019_3[, -(1:10)]
no_scols <- no_scols %>%
rename_all(paste0, "_19_3")
glimpse(no_scols)
inc_fin2019_3_lp <- cbind(sharedcols, no_scols)
glimpse(inc_fin2019_3_lp)
inc_fin2019_2 <- read_xlsx("inc_fin2019.xlsx",
sheet = 3,
.name_repair = make_clean_names
)
inc_fin2019_2 <- inc_fin2019_2 %>%
mutate(across(where(is.numeric) & contains("poblacion"),
round))
glimpse(inc_fin2019_2)
colnames(inc_fin2019_2)
sharedcols <- inc_fin2019_2[,1:10]
no_scols <- inc_fin2019_2[, -(1:10)]
no_scols <- no_scols %>%
rename_all(paste0, "_19_2")
inc_fin2019_2_lp <- cbind(sharedcols, no_scols)
glimpse(inc_fin2019_2_lp)
inc_fin2019_1 <- read_xlsx("inc_fin2019.xlsx",
sheet = 4,
.name_repair = make_clean_names
)
inc_fin2019_1 <- inc_fin2019_1 %>%
mutate(across(where(is.numeric) & contains("poblacion"),
round))
head(inc_fin2019_1[, 6:10])
glimpse(inc_fin2019_1)
sharedcols <- inc_fin2019_1[,1:10]
no_scols <- inc_fin2019_1[, -(1:10)]
no_scols <- no_scols %>%
rename_all(paste0, "_19_1")
inc_fin2019_1_lp <- cbind(sharedcols, no_scols)
glimpse(inc_fin2019_1_lp)
dim(inc_fin2019_1_lp);dim(inc_fin2019_2_lp);dim(inc_fin2019_3_lp);dim(inc_fin2019_4_lp)
zehn_cols <- as.vector(colnames(sharedcols))
inct_19 <- inc_fin2019_1_lp %>%
inner_join(inc_fin2019_2_lp, by = zehn_cols) %>%
inner_join(inc_fin2019_3_lp, by = zehn_cols) %>%
inner_join(inc_fin2019_4_lp, by = zehn_cols)
inct_19 <- inct_19 %>%
mutate(clave_municipio = as.character(clave_municipio),
clave_estado = as.character(clave_estado)
) %>%
mutate(across(
where(is.character), replace_non_ascii))
glimpse(inct_19)
dim(inct_19)
write_xlsx(inct_19, "inct2019.xlsx")
require(easypackages)
libraries("stringr", "dplyr", "readxl",
"writexl", "janitor", "textclean")
# 4th quarter 2020
inc_fin2020_4 <- read_xlsx("inc_fin2020.xlsx",
.name_repair = make_clean_names
)
inc_fin2020_4 <- inc_fin2020_4 %>%
mutate(across(where(is.numeric) & contains("poblacion"),
round))
glimpse(inc_fin2020_4)
sharedcols <- inc_fin2020_4[,1:10]
dim(sharedcols)
no_scols <- inc_fin2020_4[, -(1:10)]
dim(no_scols)
no_scols <- no_scols %>%
rename_all(paste0, "_20_4")
glimpse(no_scols)
inc_fin2020_4_lp <- cbind(sharedcols, no_scols)
glimpse(inc_fin2020_4_lp)
inc_fin2020_3 <- read_xlsx("inc_fin2020_3.xlsx",
.name_repair = make_clean_names
)
inc_fin2020_3 <- inc_fin2020_3 %>%
mutate(across(where(is.numeric) & contains("poblacion"),
round))
sharedcols <- inc_fin2020_3[,1:10]
#dim(sharedcols)
no_scols <- inc_fin2020_3[, -(1:10)]
no_scols <- no_scols %>%
rename_all(paste0, "_20_3")
inc_fin2020_3_lp <- cbind(sharedcols, no_scols)
#head(inc_fin2020_3_lp)
glimpse(inc_fin2020_3_lp)
inc_fin2020_2 <- read_xlsx("inc_fin2020_2.xlsx",
.name_repair = make_clean_names
)
inc_fin2020_2 <- inc_fin2020_2 %>%
mutate(across(where(is.numeric) & contains("poblacion"),
round))
sharedcols <- inc_fin2020_2[,1:10]
dim(sharedcols)
no_scols <- inc_fin2020_2[, -(1:10)]
dim(no_scols)
no_scols <- no_scols %>%
rename_all(paste0, "_20_2")
inc_fin2020_2_lp <- cbind(sharedcols, no_scols)
glimpse(inc_fin2020_2_lp)
inc_fin2020_1 <- read_xlsx("inc_fin2020_1.xlsx",
.name_repair = make_clean_names
)
inc_fin2020_1 <- inc_fin2020_1 %>%
mutate(across(where(is.numeric) & contains("poblacion"),
round))
sharedcols <- inc_fin2020_1[,1:10]
dim(sharedcols)
no_scols <- inc_fin2020_1[, -(1:10)]
dim(no_scols)
no_scols <- no_scols %>%
rename_all(paste0, "_20_1")
inc_fin2020_1_lp <- cbind(sharedcols, no_scols)
glimpse(inc_fin2020_1_lp)
dim(inc_fin2020_1_lp)
dim(inc_fin2020_1_lp);dim(inc_fin2020_2_lp);dim(inc_fin2020_3_lp);dim(inc_fin2020_4_lp)
zehn_cols <- as.vector(colnames(inc_fin2020_1[,1:10]))
zehn_cols <- as.vector(colnames(sharedcols))
zehn_cols
inct_20 <- inc_fin2020_1_lp %>%
inner_join(inc_fin2020_2_lp, by = zehn_cols) %>%
inner_join(inc_fin2020_3_lp, by = zehn_cols) #%>%
funf_cols <- as.vector(colnames(sharedcols[1:5]))
funf_cols
funf_cols #Columns from 6 to 10 do not share the same information with the rest of the database
cols_exc <- inc_fin2020_4_lp[, -(6:10)] #Joining these columns with database will generate an unmatch that deletes all rows
inct_20 <- inct_20 %>%
inner_join(cols_exc, by = funf_cols)
glimpse(inct_20)
dim(inct_20)
inct_20 <- inct_20 %>%
mutate(clave_municipio = as.character(clave_municipio),
clave_estado = as.character(clave_estado)
) %>%
mutate(across(
where(is.character), replace_non_ascii)
)
glimpse(inct_20)
write_xlsx(inct_20, "inct2020.xlsx")
